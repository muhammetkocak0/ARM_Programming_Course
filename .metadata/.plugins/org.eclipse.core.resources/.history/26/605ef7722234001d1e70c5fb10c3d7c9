
#include "stm32f4xx.h"
#include "stm32f4_discovery.h"
#include "stm32f4xx_rcc.h"
void RCC_Config()
{
	RCC->CR |= 0x00010000;		// HEON
	while(!(RCC->CR & 0x00020000));	// HSEON Ready Flag wait
	RCC->CR |= 0x00080000;			// CSS Enable
	RCC->CR |= 0x01000000;			// PLL On
	RCC->PLLCFGR |= 0x00400000;		// PLL HSE Selected
	RCC->PLLCFGR |= 0x00000004;		// PLL M = 4
	RCC->PLLCFGR |= 0x00005A00;		// PLL N = 168
	RCC->PLLCFGR |= 0x00000000;		// PLL P = 2
	RCC->CFGR |= 0x00000000;		// AHB Prescaler 1
	RCC->CFGR |= 0x00080000;		// APB2 Prescaler 2
	RCC->CFGR |= 0x00001400;		// AHB1 Prescaler 4
	RCC->CIR |= 0x00080000;			// HSERDY Flag Clear
	RCC->CIR |= 0x00800000;			// CSS Flag Clear
}
id gpio_for_uart_cfg()
{
	RCC->AHB1ENR |=(1<<0);
	GPIOA->MODER |= (1<<5)|(1<<7);
	GPIOA->OSPEEDR |= (1<<4)|(1<<5)|(1<<6)|(1<<7);
	GPIOA->AFR[0] |= (1<<8)|(1<<9)|(1<<10)|(1<<12)|(1<<13)|(1<<14);

}



uint8_t buffer[50];


void uart_transmitter_cfg()
{
	RCC->APB1ENR |=(1<<17);
	USART2->BRR = (22<4)|(13<<0);
	USART2->CR1 |=(1<<3)|(0<<10)|(0<<12);
	USART2->CR2 |=0<<12;
	USART2->CR1 |=(1<<13);

}



void send_char(char message)
{
	while(!(USART2->SR & (1<<7)));

	USART2->DR = message;

}
void uart_transmit( char* buff)
{
	while(*buff)
	{

        send_char(*buff);
	    *buff++;
	}



}


uint32_t Fpclk1 = 0;


int main(void)
{
	RCC_Config(); // HSI aktif eder  PLL kapatýr
	SystemCoreClockUpdate();

	gpio_for_uart_cfg();
	uart_transmitter_cfg();

  while (1)
  {
uart_transmit("ASD");

for(int i = 0; i<1680000; i++);
  }
}


/*
 * Callback used by stm32f4_discovery_audio_codec.c.
 * Refer to stm32f4_discovery_audio_codec.h for more info.
 */
void EVAL_AUDIO_TransferComplete_CallBack(uint32_t pBuffer, uint32_t Size){
  /* TODO, implement your code here */
  return;
}

/*
 * Callback used by stm324xg_eval_audio_codec.c.
 * Refer to stm324xg_eval_audio_codec.h for more info.
 */
uint16_t EVAL_AUDIO_GetSampleCallBack(void){
  /* TODO, implement your code here */
  return -1;
}
