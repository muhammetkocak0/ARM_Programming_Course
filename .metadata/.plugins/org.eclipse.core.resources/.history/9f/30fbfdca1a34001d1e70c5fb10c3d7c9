
#include "stm32f4xx.h"
#include "stm32f4_discovery.h"


void gpio_for_uart_cfg()
{
	RCC->AHB1ENR |=(1<<0);
	GPIOA->MODER |= (1<<5)|(1<<7);
	GPIOA->OSPEEDR |= (1<<4)|(1<<5)|(1<<6)|(1<<7);
	GPIOA->AFR[0] |= (1<<8)|(1<<9)|(1<<10)|(1<<12)|(1<<13)|(1<<14);
}



uint8_t buffer[50];


void uart_transmitter_cfg()
{
	RCC->APB1ENR |=(1<<17);
	USART2->BRR = 115200;
	USART2->CR1 |=(1<<0)|(1<<3)|(1<<13);
}
void uart_transmit(volatile uint8_t* buff)
{
	while(*buff)
	{
		USART2->DR = *buff;
		while((USART2->SR & 1<<6)!=1);
		while((USART2->SR & 1<<7)!=1);
	    *buff++;
	}



}




int main(void)
{
	gpio_for_uart_cfg();

  while (1)
  {

  }
}


/*
 * Callback used by stm32f4_discovery_audio_codec.c.
 * Refer to stm32f4_discovery_audio_codec.h for more info.
 */
void EVAL_AUDIO_TransferComplete_CallBack(uint32_t pBuffer, uint32_t Size){
  /* TODO, implement your code here */
  return;
}

/*
 * Callback used by stm324xg_eval_audio_codec.c.
 * Refer to stm324xg_eval_audio_codec.h for more info.
 */
uint16_t EVAL_AUDIO_GetSampleCallBack(void){
  /* TODO, implement your code here */
  return -1;
}
